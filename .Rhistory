getwd()
library(tidyr)
library(rlang)
library(tidyr)
library(shiny); runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1/dashboard.R')
install.packages("shiny", dependencies = TRUE)
install.packages("shiny", dependencies = TRUE)
install.packages("shiny", dependencies = TRUE)
install.packages("shiny", dependencies = TRUE)
runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1/dashboard.R')
runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1/dashboard.R')
shiny::runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1')
runApp()
runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1')
runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1')
runApp()
runApp('Sem 2/Case Studies in Data Sci/UI/WILProject1')
getwd()
getwd()
setwd("C:/Users/miche/OneDrive/Documents/Sem 2/Case Studies in Data Sci/UI/WILProject1")
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Import datasets
covid <- read_csv("data/covid_clean.csv")
unemployment <- read_csv("data/unemployment_rate_updated.csv")
# Filtering out data from the clean dataset for only Australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
# Joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
# Subsetting due to missing the first 20 rows
covid_unemp_new <- covid_unemp[-c(1:20),]
view(covid_unemp_new)
View(covid_unemp_new)
# creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(release_date=dmy(release_date), Month_yr = format_ISO8601(release_date, precision='ym'))
names(covid_unemp_my)[names(covid_unemp_my) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
# New dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, `Cumulative_number_for_14_days_of_COVID-19_cases_per_100000`) %>%
gather(key = "variable", value = "value", -Month_yr)
runApp()
runApp()
# ggplot 1
plot <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
runApp()
runApp()
runApp()
runApp()
covidData <- read_csv("data/au_covid.csv")
stockData<- read_csv("data/BTC-AUD.csv")
covidData[is.na(covidData)] = 0
# Join Dataset
df <- covidData %>% left_join(stockData,by = "date")
df <- separate(df, "date", c("Year", "Month", "Day"), sep = "-")
df <- df %>%
group_by(Month) %>%
summarise_at(vars(countryCode), funs(mean(High),mean(Low),sum(cases)))
# Remove the first 9 rows
df <- df[-c(9),]
# Rename categories
df$Month[df$Month  == '01']  <-  'January'
df$Month[df$Month  == '02']  <-  'Febrauary'
df$Month[df$Month  == '03']  <-  'March'
df$Month[df$Month  == '04']  <-  'April'
df$Month[df$Month  == '05']  <-  'May'
df$Month[df$Month  == '06']  <-  'June'
df$Month[df$Month  == '07']  <-  'July'
df$Month[df$Month  == '08']  <-  'August'
df
names(df)[names(df) == "mean..1"] <- "mean_high_maximum_price_during_the_day"
names(df)[names(df) == "mean..2"] <- "mean_low_minimum_price_during_the_day"
names(df)[names(df) == "sum"] <- "sum_cases"
#df=rename(df, mean_high_maximum_price_during_the_day = mean..1)
#df=rename(df, mean_low_minimum_price_during_the_day = mean..2)
#df=rename(df, sum_cases = sum)
df
cols <- c('red','blue','green');
par(lwd=6);
plot <- barplot(
t(df[c('mean_high_maximum_price_during_the_day','mean_low_minimum_price_during_the_day','sum_cases')]),
beside=T,
ylim=c(0,25000),
border=cols,
col='white',
names.arg=df$Month,
xlab='Month 2020',
ylab='Frequency',
legend.text=c('Maximum price','Minimun Price','Cases of Covid'),
args.legend=list(text.col=cols,col=cols,border=cols,bty='n')
);
plot
box();
runApp()
runApp()
covidData <- getCSV("au_covid.csv")
unemploymentData <- getCSV("unemployment_rate_updated.csv")
covidData[is.na(covidData)] = 0
names(covidData)[names(covidData) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
unemploymentData <- unemploymentData[, c(1,2)]
#df_unemployment=rename(df_unemployment, date = release_date)
unemploymentData$release_date <- as.Date(paste(unemploymentData$release_date,"-01",sep=""))
df <- covidData %>% left_join(unemploymentData,by = "release_date")
covidData
covidData <- getCSV("au_covid.csv")
unemploymentData <- getDisplayGovUnemploymentData()
covidData[is.na(covidData)] = 0
names(covidData)[names(covidData) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
unemploymentData <- unemploymentData[, c(1,2)]
#df_unemployment=rename(df_unemployment, date = release_date)
unemploymentData$date <- as.Date(paste(unemploymentData$date,"-01",sep=""))
#df_unemployment=rename(df_unemployment, date = release_date)
unemploymentData
data <- getCSV("unemployment_rate_updated.csv")
names(data)[names(data) == "release_date"] <- "date"
data
covidData <- getCSV("au_covid.csv")
unemploymentData <- getDisplayGovUnemploymentData()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
