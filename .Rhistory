),
tabItem(tabName = "COVID_Cryptocurrency",
h2("COVID Cryptocurrency tab content")
),
tabItem(tabName = "COVID_Ecommerce",
h2("COVID Ecommerce tab content")
),
tabItem(tabName = "COVID_Banking",
h2("COVID Banking tab content")
)
)
)
interface <- dashboardPage(header, sidebar, body)
#SERVER SIDE
site <- function(input, output) {
#import dataset
unemployment <- read_csv("data/unemployment_rate_updated.csv")
covid <- read_csv("data/covid_clean.csv")
#filtering out data from the clean dataset for only australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
covidAU_subset %>% rename(dateRep = release_date)
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting ?????
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(date=dmy(date), Month_yr = format_ISO8601(date, precision='ym'))
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
#outputting data tables
output$unemployment <- renderDataTable(unemployment)
output$covidAU_subset <- renderDataTable(covidAU_subset)
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
#output$table.output <- renderTable({
#  mydata()
#})
#output$plot1 <- renderPlot({
#  x <- tbl()[,1]
#  plot(x)
#})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(interface, site)
library(shinydashboard)
library(shiny)
library(readr)
library(dplyr)
library(magrittr)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(lubridate)
library(data.table)
library(xts)
library(plyr)
setwd("C:/GitHub/WILProject1")
#splitting parts easier readability
header <- dashboardHeader(title = "COVID-19 Finance Dashboard")
sidebar <- dashboardSidebar(sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",
label = "Search..."),
menuItem("Data Visualisation", tabName = "Data_Visualisation", icon = icon("chart-bar", lib = "font-awesome"),
startExpanded = TRUE,
menuSubItem("Unemployment Rate", tabName = "Unemployment_Rate")),
menuItem("COVID Stocks", tabName = "COVID_Stocks", icon = icon("chart-bar", lib = "font-awesome")),
menuItem("COVID Government", tabName = "COVID_Government", icon = icon("book")),
menuItem("COVID Cryptocurrency", tabName = "COVID_Cryptocurrency", icon = icon("money")),
menuItem("COVID Ecommerce", tabName = "COVID_Ecommerce", icon = icon("shopping-cart", lib = "font-awesome")),
menuItem("COVID Banking", tabName = "COVID_Banking", icon = icon("piggy-bank", lib = "font-awesome"))
))
body <- dashboardBody(
tabItems(
tabItem("Unemployment_Rate",
tabsetPanel(
tabPanel("Data Viewer",
fluidPage(box(title = "Unemployment Rate (2019)"), dataTableOutput('unemployment'),
box(title = "Unemployment Rate (COVID 2020)"), dataTableOutput('covid'))
),
tabPanel("Data Visualisation",
fluidPage(box(title = "Unemployment Rate Comparison Plot"), plotOutput('covid_unemp_plot1'))
)
)),
tabItem(tabName = "COVID_Stocks",
fluidRow(
box(
title = "Histogram", status = "primary", solidHeader = TRUE,
collapsible = TRUE,
plotOutput("plot1", height = 250)
),
box(
title = "Parameter Settings", status = "warning",solidHeader = TRUE,
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50),
textInput("text", "Text input:")
),
box(
title = "Table", status = "warning",solidHeader = TRUE,
collapsible = TRUE,
dataTableOutput('table')
)
)
),
tabItem(tabName = "COVID_Government",
h2("COVID Government tab content")
),
tabItem(tabName = "COVID_Cryptocurrency",
h2("COVID Cryptocurrency tab content")
),
tabItem(tabName = "COVID_Ecommerce",
h2("COVID Ecommerce tab content")
),
tabItem(tabName = "COVID_Banking",
h2("COVID Banking tab content")
)
)
)
interface <- dashboardPage(header, sidebar, body)
#SERVER SIDE
site <- function(input, output) {
#import dataset
unemployment <- read_csv("data/unemployment_rate_updated.csv")
covid <- read_csv("data/covid_clean.csv")
#filtering out data from the clean dataset for only australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting ?????
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(date=dmy(date), Month_yr = format_ISO8601(date, precision='ym'))
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
#outputting data tables
output$unemployment <- renderDataTable(unemployment)
output$covidAU_subset <- renderDataTable(covidAU_subset)
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
#output$table.output <- renderTable({
#  mydata()
#})
#output$plot1 <- renderPlot({
#  x <- tbl()[,1]
#  plot(x)
#})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(interface, site)
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting ?????
covid_unemp_new <- covid_unemp[-c(1:20),]
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
View(covid_unemp)
getwd()
View(covid_unemp)
#subsetting ?????
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(date=dmy(date), Month_yr = format_ISO8601(date, precision='ym'))
View(covid_unemp_new)
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(date=dmy(date), Month_yr = format_ISO8601(date, precision='ym'))
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(release_date=dmy(release_date), Month_yr = format_ISO8601(release_date, precision='ym'))
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
View(covid_unemp_my)
names(covid_unemp_my)[names(covid_unemp_my) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
covid_unemp_plot1
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
runApp('dashboard.R')
install.packages("xts", dependencies = TRUE)
#splitting parts easier readability
header <- dashboardHeader(title = "COVID-19 Finance Dashboard")
sidebar <- dashboardSidebar(sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",
label = "Search..."),
menuItem("Data Visualisation", tabName = "Data_Visualisation", icon = icon("chart-bar", lib = "font-awesome"),
startExpanded = TRUE,
menuSubItem("Unemployment Rate", tabName = "Unemployment_Rate")),
menuItem("COVID Stocks", tabName = "COVID_Stocks", icon = icon("chart-bar", lib = "font-awesome")),
menuItem("COVID Government", tabName = "COVID_Government", icon = icon("book")),
menuItem("COVID Cryptocurrency", tabName = "COVID_Cryptocurrency", icon = icon("money")),
menuItem("COVID Ecommerce", tabName = "COVID_Ecommerce", icon = icon("shopping-cart", lib = "font-awesome")),
menuItem("COVID Banking", tabName = "COVID_Banking", icon = icon("piggy-bank", lib = "font-awesome"))
))
body <- dashboardBody(
tabItems(
tabItem("Unemployment_Rate",
tabsetPanel(
tabPanel("Data Viewer",
fluidPage(box(title = "Unemployment Rate (2019)"), dataTableOutput('unemployment'),
box(title = "Unemployment Rate (COVID 2020)"), dataTableOutput('covid'))
),
tabPanel("Data Visualisation",
fluidPage(box(title = "Unemployment Rate Comparison Plot"), plotOutput("covid_unemp_plot1"))
)
)),
tabItem(tabName = "COVID_Stocks",
fluidRow(
box(
title = "Histogram", status = "primary", solidHeader = TRUE,
collapsible = TRUE,
plotOutput("plot1", height = 250)
),
box(
title = "Parameter Settings", status = "warning",solidHeader = TRUE,
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50),
textInput("text", "Text input:")
),
box(
title = "Table", status = "warning",solidHeader = TRUE,
collapsible = TRUE,
dataTableOutput('table')
)
)
),
tabItem(tabName = "COVID_Government",
h2("COVID Government tab content")
),
tabItem(tabName = "COVID_Cryptocurrency",
h2("COVID Cryptocurrency tab content")
),
tabItem(tabName = "COVID_Ecommerce",
h2("COVID Ecommerce tab content")
),
tabItem(tabName = "COVID_Banking",
h2("COVID Banking tab content")
)
)
)
interface <- dashboardPage(header, sidebar, body)
#SERVER SIDE
site <- function(input, output) {
#import dataset
unemployment <- read_csv("data/unemployment_rate_updated.csv")
covid <- read_csv("data/covid_clean.csv")
#filtering out data from the clean dataset for only australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting due to missing the first 20 rows
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(release_date=dmy(release_date), Month_yr = format_ISO8601(release_date, precision='ym'))
names(covid_unemp_my)[names(covid_unemp_my) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
#outputting data tables
output$unemployment <- renderDataTable(unemployment)
output$covidAU_subset <- renderDataTable(covidAU_subset)
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
#output$table.output <- renderTable({
#  mydata()
#})
#output$plot1 <- renderPlot({
#  x <- tbl()[,1]
#  plot(x)
#})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(interface, site)
#splitting parts easier readability
header <- dashboardHeader(title = "COVID-19 Finance Dashboard")
sidebar <- dashboardSidebar(sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",
label = "Search..."),
menuItem("Data Visualisation", tabName = "Data_Visualisation", icon = icon("chart-bar", lib = "font-awesome"),
startExpanded = TRUE,
menuSubItem("Unemployment Rate", tabName = "Unemployment_Rate")),
menuItem("COVID Stocks", tabName = "COVID_Stocks", icon = icon("chart-bar", lib = "font-awesome")),
menuItem("COVID Government", tabName = "COVID_Government", icon = icon("book")),
menuItem("COVID Cryptocurrency", tabName = "COVID_Cryptocurrency", icon = icon("money")),
menuItem("COVID Ecommerce", tabName = "COVID_Ecommerce", icon = icon("shopping-cart", lib = "font-awesome")),
menuItem("COVID Banking", tabName = "COVID_Banking", icon = icon("piggy-bank", lib = "font-awesome"))
))
body <- dashboardBody(
tabItems(
tabItem("Unemployment_Rate",
tabsetPanel(
tabPanel("Data Viewer",
fluidPage(box(title = "Unemployment Rate (2019)"), dataTableOutput('unemployment'),
box(title = "Unemployment Rate (COVID 2020)"), dataTableOutput('covid'))
),
tabPanel("Data Visualisation",
fluidPage(box(title = "Unemployment Rate Comparison Plot"), plotOutput("covid_unemp_plot1"))
)
)),
tabItem(tabName = "COVID_Stocks",
fluidRow(
box(
title = "Histogram", status = "primary", solidHeader = TRUE,
collapsible = TRUE,
plotOutput("plot1", height = 250)
),
box(
title = "Parameter Settings", status = "warning",solidHeader = TRUE,
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50),
textInput("text", "Text input:")
),
box(
title = "Table", status = "warning",solidHeader = TRUE,
collapsible = TRUE,
dataTableOutput('table')
)
)
),
tabItem(tabName = "COVID_Government",
h2("COVID Government tab content")
),
tabItem(tabName = "COVID_Cryptocurrency",
h2("COVID Cryptocurrency tab content")
),
tabItem(tabName = "COVID_Ecommerce",
h2("COVID Ecommerce tab content")
),
tabItem(tabName = "COVID_Banking",
h2("COVID Banking tab content")
)
)
)
interface <- dashboardPage(header, sidebar, body)
#SERVER SIDE
site <- function(input, output) {
#import dataset
unemployment <- read_csv("data/unemployment_rate_updated.csv")
covid <- read_csv("data/covid_clean.csv")
#filtering out data from the clean dataset for only australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting due to missing the first 20 rows
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(release_date=dmy(release_date), Month_yr = format_ISO8601(release_date, precision='ym'))
names(covid_unemp_my)[names(covid_unemp_my) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot 1
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
#plot 2
#outputting data tables
output$unemployment <- renderDataTable(unemployment)
output$covidAU_subset <- renderDataTable(covidAU_subset)
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
#output$covid_unemp_plot2 <-renderPlot({covid_unemp_plot2})
#output$table.output <- renderTable({
#  mydata()
#})
#output$plot1 <- renderPlot({
#  x <- tbl()[,1]
#  plot(x)
#})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(interface, site)
#splitting parts easier readability
header <- dashboardHeader(title = "COVID-19 Finance Dashboard")
sidebar <- dashboardSidebar(sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",
label = "Search..."),
menuItem("Data Visualisation", tabName = "Data_Visualisation", icon = icon("chart-bar", lib = "font-awesome"),
startExpanded = TRUE,
menuSubItem("Unemployment Rate", tabName = "Unemployment_Rate")),
menuItem("COVID Stocks", tabName = "COVID_Stocks", icon = icon("chart-bar", lib = "font-awesome")),
menuItem("COVID Government", tabName = "COVID_Government", icon = icon("book")),
menuItem("COVID Cryptocurrency", tabName = "COVID_Cryptocurrency", icon = icon("money")),
menuItem("COVID Ecommerce", tabName = "COVID_Ecommerce", icon = icon("shopping-cart", lib = "font-awesome")),
menuItem("COVID Banking", tabName = "COVID_Banking", icon = icon("piggy-bank", lib = "font-awesome"))
))
body <- dashboardBody(
tabItems(
tabItem("Unemployment_Rate",
tabsetPanel(
tabPanel("Data Viewer",
fluidPage(box(title = "Unemployment Rate (2019)"), dataTableOutput('unemployment'),
box(title = "Unemployment Rate (COVID 2020)"), dataTableOutput('covid'))
),
tabPanel("Data Visualisation",
fluidPage(box(title = "Unemployment Rate Comparison Plot"), plotOutput("covid_unemp_plot1"))
)
)),
tabItem(tabName = "COVID_Stocks",
fluidRow(
box(
title = "Histogram", status = "primary", solidHeader = TRUE,
collapsible = TRUE,
plotOutput("plot1", height = 250)
),
box(
title = "Parameter Settings", status = "warning",solidHeader = TRUE,
"Box content here", br(), "More box content",
sliderInput("slider", "Slider input:", 1, 100, 50),
textInput("text", "Text input:")
),
box(
title = "Table", status = "warning",solidHeader = TRUE,
collapsible = TRUE,
dataTableOutput('table')
)
)
),
tabItem(tabName = "COVID_Government",
h2("COVID Government tab content")
),
tabItem(tabName = "COVID_Cryptocurrency",
h2("COVID Cryptocurrency tab content")
),
tabItem(tabName = "COVID_Ecommerce",
h2("COVID Ecommerce tab content")
),
tabItem(tabName = "COVID_Banking",
h2("COVID Banking tab content")
)
)
)
interface <- dashboardPage(header, sidebar, body)
#SERVER SIDE
site <- function(input, output) {
#import dataset
unemployment <- read_csv("data/unemployment_rate_updated.csv")
covid <- read_csv("data/covid_clean.csv")
#filtering out data from the clean dataset for only australia
covid_subset <- covid[,c(1,7,11)]
covidAU_subset <- covid_subset  %>% filter(countries == "Australia")
names(covidAU_subset)[names(covidAU_subset) == "dateRep"] <- "release_date"
#joining covid dataset with unemployment
covid_unemp <- covidAU_subset %>% left_join(unemployment, by = "release_date")
#subsetting due to missing the first 20 rows
covid_unemp_new <- covid_unemp[-c(1:20),]
#creating new column for data
covid_unemp_my <- covid_unemp_new %>% mutate(release_date=dmy(release_date), Month_yr = format_ISO8601(release_date, precision='ym'))
names(covid_unemp_my)[names(covid_unemp_my) == "Cumulative_number_for_14_days_of_COVID-19_cases_per_100000"] <- "Cumulative_number"
#new dataframe for time series data
covid_unemp <- covid_unemp_my %>% select(Month_yr, Unemployment_rate, Cumulative_number) %>%
gather(key = "variable", value = "value", -Month_yr)
#ggplot 1
covid_unemp_plot1 <- ggplot(covid_unemp, aes(x=Month_yr, y = value)) + geom_line(aes(color = variable), size = 1) + scale_color_manual(values = c("#00AFBB", "#E7B800")) + theme_minimal()
#plot 2
#outputting data tables
output$unemployment <- renderDataTable(unemployment)
output$covidAU_subset <- renderDataTable(covidAU_subset)
#outputting data PLOTS
output$covid_unemp_plot1 <-renderPlot({covid_unemp_plot1})
#output$covid_unemp_plot2 <-renderPlot({covid_unemp_plot2})
#output$table.output <- renderTable({
#  mydata()
#})
#output$plot1 <- renderPlot({
#  x <- tbl()[,1]
#  plot(x)
#})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(interface, site)
